name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: mcp_multi_ai_pro_test
          POSTGRES_USER: mcp_user
          POSTGRES_PASSWORD: mcp_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build project
      run: npm run build
    
    - name: Run tests
      run: npm test
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: mcp_user
        POSTGRES_PASSWORD: mcp_password
        POSTGRES_DB: mcp_multi_ai_pro_test
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY || 'test-key' }}

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Test Docker Compose
      run: |
        docker-compose config
        echo "Docker Compose configuration is valid"